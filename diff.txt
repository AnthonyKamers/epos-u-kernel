diff --git a/app/qspi/qspi.cc b/app/qspi/qspi.cc
index 05f7e09..35b4bbc 100644
--- a/app/qspi/qspi.cc
+++ b/app/qspi/qspi.cc
@@ -1,13 +1,13 @@
 // EPOS PC QSPI Mediator Test Program
 
 #include <utility/ostream.h>
-#include <machine/riscv/riscv_qspi.h>
+#include <machine/riscv/riscv_spi.h>
 #include <machine.h>
 
 using namespace EPOS;
 
 OStream cout;
-QSPI qspi;
+SPI qspi;
 
 void loop_test() {
     for (int i = 0; i < 3; i++) {
diff --git a/app/qspi/qspi_traits.h b/app/qspi/qspi_traits.h
index c37e541..0e396fe 100644
--- a/app/qspi/qspi_traits.h
+++ b/app/qspi/qspi_traits.h
@@ -15,13 +15,13 @@ template<> struct Traits<Build>: public Traits_Tokens
     static const unsigned int MODEL = SiFive_U;
     static const unsigned int CPUS = 1;
     static const unsigned int NODES = 1; // (> 1 => NETWORKING)
-    static const unsigned int EXPECTED_SIMULATION_TIME = 5; // s (0 => not simulated)
+    static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
 
     // Default flags
     static const bool enabled = true;
     static const bool monitored = false;
     static const bool debugged = true;
-    static const bool hysterically_debugged = false;
+    static const bool hysterically_debugged = true;
 
     // Default aspects
     typedef ALIST<> ASPECTS;
@@ -89,7 +89,7 @@ __END_SYS
 #include __ARCHITECTURE_TRAITS_H
 #include __MACHINE_TRAITS_H
 
-__BEGIN_SYS
+        __BEGIN_SYS
 
 
 // API Components
@@ -104,6 +104,7 @@ template<> struct Traits<System>: public Traits<Build>
 {
     static const unsigned int mode = Traits<Build>::MODE;
     static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multiheap = Traits<Scratchpad>::enabled;
 
     static const unsigned long LIFE_SPAN = 1 * YEAR; // s
     static const unsigned int DUTY_CYCLE = 1000000; // ppm
@@ -118,12 +119,13 @@ template<> struct Traits<Thread>: public Traits<Build>
 {
     static const bool enabled = Traits<System>::multithread;
     static const bool trace_idle = hysterically_debugged;
-    static const unsigned int QUANTUM = 500000; // us
+    static const bool preemptive = true;
+    static const unsigned int QUANTUM = 100000; // us
 };
 
 template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
 {
-    static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
+static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
 };
 
 template<> struct Traits<Synchronizer>: public Traits<Build>
@@ -136,6 +138,9 @@ template<> struct Traits<Alarm>: public Traits<Build>
     static const bool visible = hysterically_debugged;
 };
 
+template<> struct Traits<Address_Space>: public Traits<Build> {};
+
+template<> struct Traits<Segment>: public Traits<Build> {};
 
 __END_SYS
 
diff --git a/app/uart_example/uart_example_traits.h b/app/uart_example/uart_example_traits.h
index 6113e19..0e396fe 100644
--- a/app/uart_example/uart_example_traits.h
+++ b/app/uart_example/uart_example_traits.h
@@ -89,7 +89,7 @@ __END_SYS
 #include __ARCHITECTURE_TRAITS_H
 #include __MACHINE_TRAITS_H
 
-__BEGIN_SYS
+        __BEGIN_SYS
 
 
 // API Components
@@ -104,6 +104,7 @@ template<> struct Traits<System>: public Traits<Build>
 {
     static const unsigned int mode = Traits<Build>::MODE;
     static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multiheap = Traits<Scratchpad>::enabled;
 
     static const unsigned long LIFE_SPAN = 1 * YEAR; // s
     static const unsigned int DUTY_CYCLE = 1000000; // ppm
@@ -118,12 +119,13 @@ template<> struct Traits<Thread>: public Traits<Build>
 {
     static const bool enabled = Traits<System>::multithread;
     static const bool trace_idle = hysterically_debugged;
-    static const unsigned int QUANTUM = 500000; // us
+    static const bool preemptive = true;
+    static const unsigned int QUANTUM = 100000; // us
 };
 
 template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
 {
-    static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
+static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
 };
 
 template<> struct Traits<Synchronizer>: public Traits<Build>
@@ -136,6 +138,9 @@ template<> struct Traits<Alarm>: public Traits<Build>
     static const bool visible = hysterically_debugged;
 };
 
+template<> struct Traits<Address_Space>: public Traits<Build> {};
+
+template<> struct Traits<Segment>: public Traits<Build> {};
 
 __END_SYS
 
diff --git a/include/machine/riscv/riscv_uart.h b/include/machine/riscv/riscv_uart.h
index 73d02e7..2935db6 100644
--- a/include/machine/riscv/riscv_uart.h
+++ b/include/machine/riscv/riscv_uart.h
@@ -34,7 +34,7 @@ public:
     enum {
         FULL    =    1 << 31,   // TXDATA, TX FIFO full
         EMPTY   =    1 << 31,   // RXDATA, RX FIFO empty
-        DATA    = 0xff << 0,
+        DATA    =    0xff << 0, // DATA
         TXEN    =    1 <<  0,   // TXCTRL, TX enable
         NSTOP   =    1 <<  1,   // TXCTRL, stop bits (0 -> 1 or 1 -> 2)
         TXCNT   =    7 << 16,   // TXCTRL, TX interrupt threshold (RXWM = (len(FIFO) < TXCNT))
diff --git a/include/machine/riscv/sifive_u/sifive_u_memory_map.h b/include/machine/riscv/sifive_u/sifive_u_memory_map.h
index e02d7bf..dcc4ed2 100644
--- a/include/machine/riscv/sifive_u/sifive_u_memory_map.h
+++ b/include/machine/riscv/sifive_u/sifive_u_memory_map.h
@@ -39,6 +39,10 @@ public:
         ETH_BASE        = emulated ? NOT_USED : 0x10090000,   // SiFive-U Ethernet
         FLASH_BASE      = 0x20000000,   // Virt / SiFive-U Flash
 
+        SPI0_BASE       = 0x10040000,   // QSPI 0 (Flash)
+        SPI1_BASE       = 0x10041000,   // QSPI 1 (Flash)
+        SPI2_BASE       = 0x10050000,   // QSPI 2
+
         // Physical Memory at Boot
         BOOT            = Traits<Machine>::BOOT,
         IMAGE           = Traits<Machine>::IMAGE,
diff --git a/include/machine/riscv/sifive_u/sifive_u_traits.h b/include/machine/riscv/sifive_u/sifive_u_traits.h
index 6f78866..c18955e 100644
--- a/include/machine/riscv/sifive_u/sifive_u_traits.h
+++ b/include/machine/riscv/sifive_u/sifive_u_traits.h
@@ -90,12 +90,12 @@ template <> struct Traits<SPI>: public Traits<Machine_Common>
 {
     static const unsigned int UNITS = 3;
 
-    static const unsigned int CLOCK = Traits<Machine>::TLCLK;
+    static const unsigned int CLOCK = Traits<Machine>::TLCLK; // clock-rate/2 (1GHz / 2 = 500MHz) -> sifive_u manual
 
     static const unsigned int DEF_UNIT = 0;
-    static const unsigned int DEF_PROTOCOL = 0;
-    static const unsigned int DEF_MODE = 0;
-    static const unsigned int DEF_DATA_BITS = 8;
+    static const unsigned int DEF_PROTOCOL = 0x2;   // QUAD mode
+    static const unsigned int DEF_MODE = 0;         // non flash
+    static const unsigned int DEF_DATA_BITS = 8;    // 8 bits per time
     static const unsigned int DEF_BIT_RATE = 250000;
 };
 
diff --git a/include/system/config.h b/include/system/config.h
index 81c7dad..84cd952 100644
--- a/include/system/config.h
+++ b/include/system/config.h
@@ -7,15 +7,15 @@
 // ARCHITECTURE, MACHINE, AND APPLICATION SELECTION
 // This section is generated automatically from makedefs by $EPOS/etc/makefile
 //============================================================================
-#define SMOD xxx
-#define ARCH xxx
-#define MACH xxx
-#define MMOD xxx
-#define APPL xxx
-#define __mode_xxx__
-#define __arch_xxx__
-#define __mach_xxx__
-#define __mmod_xxx__
+#define SMOD library
+#define ARCH rv64
+#define MACH riscv
+#define MMOD sifive_u
+#define APPL qspi
+#define __library__
+#define __rv64__
+#define __riscv__
+#define __sifive_u__
 
 //============================================================================
 // NAMESPACES AND DEFINITIONS
diff --git a/include/system/traits.h b/include/system/traits.h
index a430f7a..ed5c568 100644
--- a/include/system/traits.h
+++ b/include/system/traits.h
@@ -462,7 +462,7 @@ struct Traits_Tokens: public Transducer_Event, public System_Event, public PMU_E
     enum {LITTLE, BIG};
 
     // Serial display engines
-    enum {UART, USB};
+    enum {UART, USB, SPI};
 
     // Life span multipliers
     enum {FOREVER = 0, SECOND = 1, MINUTE = 60, HOUR = 3600, DAY = 86400, WEEK = 604800, MONTH = 2592000, YEAR = 31536000};
diff --git a/makedefs b/makedefs
index 286b177..32139b5 100644
--- a/makedefs
+++ b/makedefs
@@ -101,7 +101,7 @@ ia32_COMP_PREFIX	:= /usr/bin/x86_64-linux-gnu-
 armv7_COMP_PREFIX	:= /usr/bin/arm-none-eabi-
 armv8_COMP_PREFIX	:= /usr/bin/aarch64-linux-gnu-
 rv32_COMP_PREFIX	:= /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
-rv64_COMP_PREFIX	:= /usr/bin/riscv64-linux-gnu-
+rv64_COMP_PREFIX	:= /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
 COMP_PREFIX		= $($(ARCH)_COMP_PREFIX)
 
 # Architecture specifics
@@ -196,7 +196,7 @@ ifeq ($(MMOD),sifive_e)
 riscv_CC_FLAGS		:= -march=rv32gc -mabi=ilp32f -Wl, -mno-relax
 riscv_AS_FLAGS		:= -march=rv32gc -mabi=ilp32f
 riscv_LD_FLAGS		:= -m elf32lriscv_ilp32f --no-relax
-riscv_EMULATOR		= qemu-system-riscv32 $(QEMU_DEBUG) -machine sifive_e -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+riscv_EMULATOR		= qemu-system-riscv32 $(QEMU_DEBUG) -machine sifive_e -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel
 riscv_DEBUGGER		:= $(COMP_PREFIX)gdb
 riscv_FLASHER		:= 
 riscv_MAGIC		:= --nmagic
@@ -210,7 +210,7 @@ ifeq ($(ARCH),rv64)
 riscv_CC_FLAGS		:= -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
 riscv_AS_FLAGS		:= -march=rv64gc -mabi=lp64d
 riscv_LD_FLAGS		:= -m elf64lriscv_lp64f --no-relax
-riscv_EMULATOR		= qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+riscv_EMULATOR		= qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel $()
 else
 riscv_CC_FLAGS      := -march=rv32gc -mabi=ilp32d -Wl, -mno-relax
 riscv_AS_FLAGS      := -march=rv32gc -mabi=ilp32d
